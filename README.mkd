# Tyler's DotVim2.0

* [Installed plug-ins](#plugins)
* [Installation instructions](#install)
* [Plug-in installation instructions](#plugin-install)
* [Plug-in update instructions](#plugin-update)
* [Plug-in removal instructions](#plugin-remove)
* [Bindings](#bindings)

<a name=plugins>
### Installed plugins
* [AutoClose](https://github.com/Townk/vim-autoclose)
* [ColorSamplePack](http://www.vim.org/scripts/script.php?script_id=625)
* [ctrlp](https://github.com/kien/ctrlp.vim/)
* [endwise](https://github.com/tpope/vim-endwise)
* [Flake8](https://github.com/nvie/vim-flake8)
* [Fugitive](http://github.com/tpope/vim-fugitive)
* [NERDCommenter](https://github.com/scrooloose/nerdcommenter)
* [NERDTree](https://github.com/scrooloose/nerdtree)
* [Pathogen](https://github.com/tpope/vim-pathogen)
* [Powerline](https://github.com/Lokaltog/powerline)
* [Sparkup](https://github.com/rstacruz/sparkup)
* [Solarized](https://github.com/altercation/vim-colors-solarized)
* [Surround](https://github.com/tpope/vim-surround)
* [SnipMate](https://github.com/tylerdavis/snipmate.vim)
* [Syntastic](https://github.com/scrooloose/syntastic)
* [Tagbar](https://github.com/majutsushi/tagbar/)
* [Vim-node](https://github.com/guileen/vim-node)
* [vim-multiple-cursors](https://github.com/terryma/vim-multiple-cursors)
* [web-indent](http://www.vim.org/scripts/script.php?script_id=3081)

<a name=install>
### Installation
1. `git clone git://github.com/tylerdavis/dotvim2.0.git ~/.vim`
2. Create your ~/.vimrc file and add the line `:source ~/.vim/vimrc`
3. `cd ~/.vim && git submodule init && git submodule update`
4. (Optional) For Syntastic, check the bundle/syntastic/syntax_checkers directory for specific required language checkers.  (I use flake8 for python and DoctorJS for javascript)

<a name=plugin-install>
### To install a plug-in (requires pathogen support)
1. `git submodule add [submodule repository url] bundle/[submodule name]`
2. Commit changes.

<a name=plugin-update>
### To update plug-ins
1. `git submodule foreach git pull`

<a name=plugin-remove>
### To remove a plug-in submodule
1. Delete relevant entries from `.gitmodules` and `.git/config` files.
2. `git rm --cached bundle/[submodule name]` no trailing slash.
3. Commit changes.
4. `rm bundle/[submodule name]`

<a name=bindings>
### Bindings

#### Normal mode
* Toggle spell check - `,s`
* Toggle NERDTree - `,n`
* Toggle line comment state - `,c`
* Toggle tagbar - `,t`
* Toggle error window - `,e`
* Clear search hilights - `,<space>`
* Split the current window vertically - `,w`
* Toggle code fold - `<space>`
* Move a line up or down - `-` or `_`
* Move between windows - `<ctrl>+h`,`<ctrl>+j`,`<ctrl>+k`,`<ctrl>+l`  

#### Visual mode
* Create a code fold section - `<space>`
* Toggle selection comment state - `,c`
* Surround a selection with a character or tag, eg. {} - `S}`

#### Insert mode
* Escape from insert mode - `jj`

#### Miscellaneous
* `;` maps to `:`
